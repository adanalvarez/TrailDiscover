{
    "eventName": "Invoke",
    "eventSource": "lambda.amazonaws.com",
    "awsService": "Lambda",
    "description": "Invokes a Lambda function.",
    "mitreAttackTactics": [
        "TA0040 - Impact",
        "TA0004 - Privilege Escalation"
    ],
    "mitreAttackTechniques": [
        "T1496 - Resource Hijacking"
    ],
    "mitreAttackSubTechniques": [],
    "unverifiedMitreAttackTechniques": [
        {
            "technique": "T1059 - Command and Scripting Interpreter",
            "reason": "Lambda functions can be used to execute scripts and commands, allowing attackers to run arbitrary code within the AWS environment."
        },
        {
            "technique": "T1071 - Application Layer Protocol",
            "reason": "The Invoke API call can be used to establish communication channels over various application layer protocols for command and control purposes."
        },
        {
            "technique": "T1036 - Masquerading",
            "reason": "Attackers can invoke Lambda functions under the guise of legitimate requests to evade detection."
        },
        {
            "technique": "T1105 - Ingress Tool Transfer",
            "reason": "An attacker can use Lambda functions to download or transfer malicious tools into the environment."
        },
        {
            "technique": "T1074 - Data Staged",
            "reason": "Lambda functions can be used to stage data for exfiltration, storing collected information temporarily."
        },
        {
            "technique": "T1219 - Remote Access Software",
            "reason": "Attackers can use Lambda functions as a form of remote access to maintain control over compromised systems."
        },
        {
            "technique": "T1190 - Exploit Public-Facing Application",
            "reason": "If the Lambda function is triggered via a public-facing API endpoint, it could be exploited to gain unauthorized access. Attackers may abuse vulnerable API configurations or input validation flaws to invoke the function, thus compromising the environment."
        },
        {
            "technique": "T1053 - Scheduled Task/Job",
            "reason": "Lambda functions can be scheduled to execute tasks periodically, allowing persistent execution of malicious code."
        },
        {
            "technique": "T1648 - Serverless Execution",
            "reason": "By invoking a Lambda function, an attacker can leverage the serverless environment to run malicious code, perform lateral movement, or conduct other post-exploitation activities while taking advantage of the scalability and ephemeral nature of serverless computing to evade detection and persist within the environment."
        }
    ],
    "usedInWild": true,
    "incidents": [
        {
            "description": "Mining Crypto",
            "link": "https://twitter.com/jonnyplatt/status/1471453527390277638"
        },
        {
            "description": "Cloud Security Stories: From Risky Permissions to Ransomware Execution",
            "link": "https://sonraisecurity.com/blog/cloud-security-stories-from-risky-permissions-to-ransomware-execution/"
        }
    ],
    "researchLinks": [
        {
            "description": "AWS IAM Privilege Escalation Techniques",
            "link": "https://hackingthe.cloud/aws/exploitation/iam_privilege_escalation/"
        }
    ],
    "securityImplications": "Attackers might use Invoke to execute previously modified functions in AWS Lambda.",
    "alerting": [],
    "simulation": [
        {
            "type": "commandLine",
            "value": "N/A"
        }
    ],
    "permissions": "https://aws.permissions.cloud/iam/lambda#lambda-InvokeFunction"
}