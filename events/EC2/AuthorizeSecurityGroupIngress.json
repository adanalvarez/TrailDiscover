{
    "eventName": "AuthorizeSecurityGroupIngress",
    "eventSource": "ec2.amazonaws.com",
    "awsService": "EC2",
    "description": "Adds the specified inbound (ingress) rules to a security group.",
    "mitreAttackTactics": [
        "TA0003 - Persistence",
        "TA0008 - Lateral Movement"
    ],
    "mitreAttackTechniques": [
        "T1098 - Account Manipulation",
        "T1021 - Remote Services"
    ],
    "mitreAttackSubTechniques": [
        "T1021.004 - Remote Services: SSH",
        "T1021.007 - Remote Services: Cloud Services"
    ],
    "unverifiedMitreAttackTechniques": [
        {
            "technique": "T1133 - External Remote Services",
            "reason": "By adding or modifying ingress rules, attackers can enable remote access to the EC2 instances, which is a direct use of the AuthorizeSecurityGroupIngress API call to allow external services."
        },
        {
            "technique": "T1105 - Ingress Tool Transfer",
            "reason": "Attackers can use the API call to allow inbound traffic, facilitating the transfer of tools or payloads directly into the compromised environment."
        },
        {
            "technique": "T1562 - Impair Defenses",
            "reason": "Modifying security group rules to disable defenses or monitoring directly involves the AuthorizeSecurityGroupIngress API call."
        },
        {
            "technique": "T1069 - Permission Groups Discovery",
            "reason": "Discovering which permission groups can modify security group rules is directly relevant as it informs the attacker's strategy to use the AuthorizeSecurityGroupIngress API call."
        },
        {
            "technique": "T1203 - Exploitation for Client Execution",
            "reason": "If an attacker exploits a vulnerability and gains access to an AWS account, they might use the AuthorizeSecurityGroupIngress API call to allow them to exploit applications that were not previously reachable."
        },
        {
            "technique": "T1090 - Proxy",
            "reason": "Attackers might modify ingress rules to allow traffic through a proxy, enabling them to route malicious traffic through the compromised environment."
        }
    ],
    "usedInWild": true,
    "incidents": [
        {
            "description": "The curious case of DangerDev@protonmail.me",
            "link": "https://www.invictus-ir.com/news/the-curious-case-of-dangerdev-protonmail-me"
        },
        {
            "description": "Finding evil in AWS",
            "link": "https://expel.com/blog/finding-evil-in-aws/"
        },
        {
            "description": "Tales from the cloud trenches: Amazon ECS is the new EC2 for crypto mining",
            "link": "https://securitylabs.datadoghq.com/articles/tales-from-the-cloud-trenches-ecs-crypto-mining/"
        },
        {
            "description": "Behind the scenes in the Expel SOC: Alert-to-fix in AWS",
            "link": "https://expel.com/blog/behind-the-scenes-expel-soc-alert-aws/"
        },
        {
            "description": "When a Zero Day and Access Keys Collide in the Cloud: Responding to the SugarCRM Zero-Day Vulnerability",
            "link": "https://unit42.paloaltonetworks.com/sugarcrm-cloud-incident-black-hat/"
        },
        {
            "description": "UNMASKING GUI-VIL: FINANCIALLY MOTIVATED CLOUD THREAT ACTOR",
            "link": "https://permiso.io/blog/s/unmasking-guivil-new-cloud-threat-actor/"
        },
        {
            "description": "BrowserStack analysis: unpatched inactive machine compromised by shellshock vulnerability",
            "link": "https://www.databreaches.net/browserstack-analysis-unpatched-inactive-machine-compromised-by-shellshock-vulnerability/"
        },
        {
            "description": "Navigating the Cloud: Exploring Lateral Movement Techniques",
            "link": "https://unit42.paloaltonetworks.com/cloud-lateral-movement-techniques/"
        },
        {
            "description": "New tactics and techniques for proactive threat detection",
            "link": "https://reinforce.awsevents.com/content/dam/reinforce/2024/slides/TDR432_New-tactics-and-techniques-for-proactive-threat-detection.pdf"
        }
    ],
    "researchLinks": [
        {
            "description": "Opening a security group to the Internet",
            "link": "https://securitylabs.datadoghq.com/cloud-security-atlas/attacks/opening-security-group-port/"
        }
    ],
    "securityImplications": "Attackers might use AuthorizeSecurityGroupIngress to allow access to resources to gain persistence or move laterally.",
    "alerting": [
        {
            "type": "cloudwatchCISControls",
            "value": "https://docs.aws.amazon.com/securityhub/latest/userguide/cloudwatch-controls.html#cloudwatch-10"
        }
    ],
    "simulation": [
        {
            "type": "commandLine",
            "value": "aws ec2 authorize-security-group-ingress --group-id sg-0683fcf7a41c82593 --protocol tcp --port 22 --cidr 203.0.113.0/24"
        },
        {
            "type": "stratusRedTeam",
            "value": "https://stratus-red-team.cloud/attack-techniques/AWS/aws.exfiltration.ec2-security-group-open-port-22-ingress"
        }
    ],
    "permissions": "https://aws.permissions.cloud/iam/ec2#ec2-AuthorizeSecurityGroupIngress"
}